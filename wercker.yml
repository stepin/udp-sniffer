box: golang
dev:
  steps:
    - internal/watch:
        code: |
          go build ./...
          ./source
        reload: false
build:
  steps:
    - setup-go-workspace
    - script:
        name: go get
        code: |
          go get -t ./...
    - wercker/golint
    - script:
        name: go build
        code: |
          go build ./...
    - script:
        name: go test
        code: |
          go test ./...
    - tcnksm/gox:
        os: "darwin linux windows"
        arch: "386 amd64"
        ldflags: -X main.buildDate=`date -u '+%Y-%m-%d_%I:%M:%S%p'` -X main.gitCommit=$WERCKER_GIT_COMMIT
        output: $WERCKER_GIT_REPOSITORY-{{.OS}}_{{.Arch}}/{{.Dir}}
    - script:
        name: copy text files to distr
        code: |
          for TARGET in $(find $WERCKER_OUTPUT_DIR/pkg/ -mindepth 1 -maxdepth 1 -type d); do
              cp README.* LICENSE ${TARGET}
          done
    - script:
      name: install zip
      code: |
        sudo apt-get update -y
        sudo apt-get upgrade -y
        sudo apt-get install -y zip
    - tcnksm/zip:
        input: $WERCKER_OUTPUT_DIR/pkg
        output: $WERCKER_OUTPUT_DIR/dist
    - tcnksm/ghr:
        token: $GITHUB_TOKEN
        input: $WERCKER_OUTPUT_DIR/dist
        version: pre-release
        pre_release: true
        replace: true
