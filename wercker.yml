box: stepin2/golang-build-docker
dev:
  steps:
    - internal/watch:
        code: |
          go build ./...
          ./source
        reload: false
build:
  steps:
    - setup-go-workspace
    - script:
        name: go get
        code: |
          go get -t ./...
    - wercker/golint
    - script:
        name: go build
        code: |
          go build ./...
    - script:
        name: go test
        code: |
          go test ./...
    - stepin/gox:
        os: "darwin linux windows"
        arch: "386 amd64"
        osarch: "!darwin/386"
        ldflags: -X main.buildDate=`date -u '+%Y-%m-%d_%I:%M:%S%p'` -X main.gitCommit=$WERCKER_GIT_COMMIT
        output: $WERCKER_GIT_REPOSITORY-{{.OS}}_{{.Arch}}/{{.Dir}}
    - script:
        name: copy text files to distr
        code: |
          for TARGET in $(find $WERCKER_OUTPUT_DIR/pkg/ -mindepth 1 -maxdepth 1 -type d); do
              cp README.* LICENSE ${TARGET}
          done
    - stepin/zip:
        input: $WERCKER_OUTPUT_DIR/pkg
        output: $WERCKER_OUTPUT_DIR/dist
    - script:
        name: create rpm
        code: |
          fpm -s dir -t rpm --name udp-sniffer --version 1.0 --package $WERCKER_OUTPUT_DIR/dist/ --license MIT --rpm-os linux --prefix /opt/udp-sniffer-1 --url https://github.com/stepin/udp-sniffer $WERCKER_OUTPUT_DIR/pkg/udp-sniffer-linux_amd64/       
deploy:
  steps:
    - stepin/ghr:
        token: $GITHUB_TOKEN
        input: dist
        version: pre-release
        pre_release: true
        replace: true
